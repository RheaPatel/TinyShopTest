@page "/products/{id:int}"
@using Store.Models
@using Store.Services
@inject ProductService ProductService
@inject CartService CartService
@inject NavigationManager NavigationManager

<PageTitle>@(product?.Name ?? "Product Details") - TinyShop</PageTitle>

@if (product == null)
{
    <div class="alert alert-warning">
        Product not found.
    </div>
    <button class="btn btn-primary" @onclick="BackToProducts">Back to Products</button>
}
else
{
    <div class="row mt-4">
        <div class="col-md-6">
            <img src="@product.ImageUrl" class="img-fluid product-image" alt="@product.Name">
        </div>
        <div class="col-md-6">
            <h1>@product.Name</h1>
            <p class="product-description">@product.Description</p>
            <p class="product-category">Category: @product.Category</p>
            <p class="product-stock">In Stock: @product.Stock</p>
            <p class="product-price">$@product.Price.ToString("0.00")</p>
            
            <div class="d-flex gap-2 mt-4">
                <button class="btn btn-success" @onclick="AddToCart">
                    <i class="bi bi-cart-plus"></i> Add to Cart
                </button>
                <button class="btn btn-outline-primary" @onclick="BackToProducts">
                    Back to Products
                </button>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Product? product;

    protected override void OnInitialized()
    {
        product = ProductService.GetProductById(Id);
    }

    private void AddToCart()
    {
        if (product != null)
        {
            CartService.AddToCart(product);
        }
    }

    private void BackToProducts()
    {
        NavigationManager.NavigateTo("/products");
    }
}