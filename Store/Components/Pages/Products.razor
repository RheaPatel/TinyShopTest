@page "/products"
@inject ProductService ProductService
@inject CartService CartService
@inject NavigationManager NavigationManager

<PageTitle>Products - TinyShop</PageTitle>

<h1>Our Products</h1>

<div class="row">
    @foreach (var product in products)
    {
        <div class="col-md-4 mb-4">
            <div class="card h-100">
                <div class="card-img-top-container">
                    <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name">
                </div>
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title">@product.Name</h5>
                    <p class="card-text">@product.Description</p>
                    <p class="card-text"><small class="text-muted">Category: @product.Category</small></p>
                    <div class="mt-auto">
                        <p class="card-text price">$@product.Price.ToString("F2")</p>
                        <button class="btn btn-primary" @onclick="@(() => AddToCart(product))">
                            Add to Cart
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@if (showNotification)
{
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <strong class="me-auto">TinyShop</strong>
                <button type="button" class="btn-close" @onclick="CloseNotification"></button>
            </div>
            <div class="toast-body">
                Product added to cart successfully!
            </div>
        </div>
    </div>
}

@code {
    private IReadOnlyList<Product> products = new List<Product>();
    private bool showNotification = false;

    protected override void OnInitialized()
    {
        products = ProductService.GetProducts();
    }

    private void AddToCart(Product product)
    {
        CartService.AddToCart(product);
        showNotification = true;
    }

    private void CloseNotification()
    {
        showNotification = false;
    }
}